/*-------------------------------------------------------------------------
Filename			:		data_combine.v
===========================================================================
13/02/1
--------------------------------------------------------------------------*/
module	data_combine
(
	input				clk,
	input				rst_n,
	
	output reg	      sys_rd,
	input	[15:0]	lcd_data_16,
	input				lcd_rden,
	output reg [127:0]	lcd_data_128

);

//----------------------------------
//negedge of bank_valid signal
reg	lcd_rden_r0, lcd_rden_r1;
reg  lcd_rden_flag;

always@(posedge clk or negedge rst_n)
begin
	if(!rst_n)
		begin
		lcd_rden_r0 <= 0;
		lcd_rden_r1 <= 0;
		end
	else
		begin
		lcd_rden_r0 <= lcd_rden;
		lcd_rden_r1 <= lcd_rden_r0;
		end
end
wire	lcd_rden_flag = (lcd_rden_r1 & ~lcd_rden_r0) ? 1'b1 : 1'b0;	 //negedge

//----------------------------------------
//generate 8 length read fifo to combine to 128bit 
reg	[2:0]	state_write;
always@(posedge clk or negedge rst_n)
begin
	if(!rst_n)
		begin
          read_counter<=0;
			 lcd_data_128 <= 0;
		    sys_rd <= 1'b0;		
		end
	else
		begin
		case(state_write)
		3'd0:	begin	
		      if (lcd_rden_flag==1'b1) begin
				   lcd_data_128 <= 0;
             	state_write <= 3'd1;
				end	
				else 
             	state_write <= 3'd0;			   
		end
		3'd1:	begin	
		      sys_rd <= 1'b1;
		      if(read_counter==3'd7) begin
				   read_counter<=3'd0;
					state_write <= 3'd2;
					lcd_data_128 <= {lcd_data_128[111:0]:lcd_data_16};             //combine to 128bit
				end
			   else begin	
				   read_counter <= read_counter + 1'b1;
					state_write <= 3'd1;
					lcd_data_128 <= {lcd_data_128[111:0]:lcd_data_16};             //combine to 128bit					
		      end		
		3'd2:	begin	sys_rd <= 1'b0; state_write <= 3'd0;	end
		default:;
		endcase
		end
end


endmodule
